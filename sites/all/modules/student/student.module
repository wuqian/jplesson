<?php
// $Id$

/**
 * @file
 * Teacher Module
 */

/**
 * Implementation of hook_menu().
 */
function student_menu() {
  $items['student'] = array(
    'title' => '学生平台',
  	'description' => '学习课程与实验、查看通知、完成作业与测试',
    'page callback' => 'student_task_list',
		'access arguments' => array('access content'), 
    'type' => MENU_NORMAL_ITEM,
  );
  $items['student/notices'] = array(
    'title' => '查看通知',
 		'page callback' => 'drupal_get_form',
    'page arguments' => array('student_notices'),
  	'access arguments' => array('access student pages'), 
    'type' => MENU_CALLBACK,
  );
  $items['student/lessons'] = array(
    'title' => '课程与实验',
    'page callback' => 'student_task_list',
  	'access arguments' => array('access student pages'), 
    'type' => MENU_CALLBACK,
  );
  $items['student/tests'] = array(
    'title' => '作业',
    'page callback' => 'student_task_list',
  	'access arguments' => array('access student pages'), 
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function student_perm() {
	return array('access student pages');
}

function student_theme() {
	return array(
	'student_notices_list' => array(
      'arguments' => array('form' => NULL),
    ),
	);
}

function student_task_list() {
	$menu_items = array();
  $menu_items['通知'] = array(
  	'查看通知', 
  	array(
  		l('查看通知', 'student/notices'), 
  	),
  );
  $menu_items['课程与实验'] = array(
    '课程与实验学习、提问与答疑', 
  	array(
  		l('课程与实验列表', 'student/lessons'), 
  	),
  );
  $menu_items['作业管理'] = array(
    '完成作业、查看作业反馈', 
  	array(
  		l('作业列表', 'student/tests'), 
  	),
  );
  return theme('teacher_task_list', $menu_items);
}

function student_help($path, $arg) {
  global $base_url;
  switch ($path) {
    case 'student':
    	$output = '<p>'.'学习课程与实验、查看通知、完成作业与测试'.'<p>';
    	return $output;
  }
}

function student_notices() {
	global $user;
	
  $result = pager_query(db_rewrite_sql('SELECT n.*, u.name FROM {node} n '.' INNER JOIN {users} u ON n.uid = u.uid '.' INNER JOIN {content_field_class} nc ON n.nid = nc.nid '.' WHERE n.type = "notice" AND nc.field_class_value = '.$user->class.' ORDER BY n.changed DESC'), 50, 0, NULL, $filter['args']);

  // Enable language column if locale is enabled or if we have any node with language
  $count = db_result(db_query("SELECT COUNT(*) FROM {node} n WHERE language != ''"));
  $multilanguage = (module_exists('locale') || $count);

  $languages = language_list();
  $destination = drupal_get_destination();
  $nodes = array();
  while ($node = db_fetch_object($result)) {
    $nodes[$node->nid] = '';
    $options = empty($node->language) ? array() : array('language' => $languages[$node->language]);
    $form['title'][$node->nid] = array('#value' => l($node->title, 'node/'. $node->nid, $options));
    $form['name'][$node->nid] =  array('#value' => check_plain(node_get_types('name', $node)));
    $form['username'][$node->nid] = array('#value' => $node->name);
    $form['date'][$node->nid] = array('#value' => format_date($node->changed));
  }
  $form['pager'] = array('#value' => theme('pager', NULL, 50, 0));
  $form['#theme'] = 'student_notices_list';
  return $form;
}

function theme_student_notices_list($form) {
	// If there are rows in this form, then $form['title'] contains a list of
  // the title form elements.
  $has_posts = isset($form['title']) && is_array($form['title']);
  $select_header = $has_posts ? theme('table_select_header_cell') : '';
  $header = array($select_header, t('Title'), t('Type'), t('Author'), t('Date'));
  $output = '';
  $output .= drupal_render($form['options']);
  if ($has_posts) {
    foreach (element_children($form['title']) as $key) {
      $row = array();
      $row[] = drupal_render($form['nodes'][$key]);
      $row[] = drupal_render($form['title'][$key]);
      $row[] = drupal_render($form['name'][$key]);
      $row[] = drupal_render($form['username'][$key]);
      $row[] = drupal_render($form['date'][$key]);
      $rows[] = $row;
    }

  }
  else {
    $rows[] = array(array('data' => t('No posts available.'), 'colspan' => '6'));
  }

  $output .= theme('table', $header, $rows);
  if ($form['pager']['#value']) {
    $output .= drupal_render($form['pager']);
  }

  $output .= drupal_render($form);

  return $output;
}